# Generated by Buildr 1.4.15, change to your liking

# Standard maven2 repository
repositories.remote << 'http://repo1.maven.org/maven2'

desc 'The scala-gae-demo project'
define 'scala-appengine-demo' do
  project.group = 'com.google.appengine.demos.gwtdlx'
  project.version = '1.0-SNAPSHOT'
  # target app path for AppEngine
  war_path = project.name + '-' + project.version
  app_dir = 'target/' + war_path
  Dir.mkdir(app_dir) unless File.exists?(app_dir)
  compile.using :incremental => true
  compile.with('com.google.appengine:appengine-api-1.0-sdk:jar:1.8.8', 'com.google.gwt:gwt-user:jar:2.5.1', 'javax.servlet:servlet-api:jar:2.5', 'javax.validation:validation-api:jar:1.0.0.GA', 'javax.validation:validation-api:jar:sources:1.0.0.GA', 'jstl:jstl:jar:1.2', 'org.json:json:jar:20090211', 'org.scala-lang:scala-library:jar:2.10.3')
    .into(app_dir)
  `cd #{app_dir}; jar xf ../#{war_path}.war`
  test.with 'com.google.appengine:appengine-api-stubs:jar:1.8.8', 'com.google.appengine:appengine-testing:jar:1.8.8'
  package :war, :id => 'scala-appengine-demo'
  task('appengine') do |task|
    Buildr.AppEngine.update
  end
  task :update do
    puts "Uploading to AppEngine"
    system 'appcfg.sh', '--oauth2', 'update', app_dir
  end
  #build.enhance ['update']

  task :rollback do
    puts "Rolling back last deployment to AppEngine"
    system 'appcfg.sh', '--oauth2', 'rollback', app_dir
  end

  task :devserver do
    puts "Starting development server"
    system 'dev_appserver.sh', app_dir
  end
end

# module AppEngine
# 	include Extension

# 	first_time do |project|
# 		desc 'Wrapper for Google AppEngine appcfg.sh script'
#     #puts "appcfg.sh wrapper for #{project.name}"
#     Project.local_task('update')
# 	end

# 	before_define do |project|
#       # Nothing to be done before hand
#   end

#   after_define do |project|
#     system('appcfg.sh', 'update') or
#       fail 'Fail to run appcfg.sh update'
#   end

# 	def update
# 		#task('update')
#     #system('appcfg.sh')
#     system('`date`')
# 	end
# end

# class Buildr::Project
#   include AppEngine
# end